[build-system]
requires = ["flit_core >=3.11,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "uncurlx"
authors = [{ name = "whichoneiwonder", email = "whichoneiwonder@github.com" }]
readme = "README.md"
license = "Apache-2.0"
license-files = ["LICENSE"]
dynamic = ["version", "description"]
keywords = ["curl", "http", "cli", "command-line", "uncurl", "httpx", "uncurlx"]
requires-python = ">=3.9"
dependencies = []
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    # Language versions
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    # Topics
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Utilities",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "Environment :: Console",
]

[project.urls]
Home = "https://github.com/whichoneiwonder/uncurl-x"

[project.optional-dependencies]
clip = ["pyperclip >=1.9, <2"]            # pyperclip requires xclip or similar on Linux

[project.scripts]
uncurlx = "uncurlx.__main__:main"


[tool.ruff]
line-length = 120
lint.extend-select = ["I", "C90"]
target-version = "py39"

[tool.uv]


[dependency-groups]
dev = [
    "httpbin>=0.10.2",
    "httpx[cli]>=0.28, <1",
    "ruff >=0.11",
    "pytest",
]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.bumpversion]
current_version = "0.0.13-rc0"
commit = true
tag = true
tag_name = "{new_version}"
parse = """(?x)
    (?P<major>0|[1-9]\\d*)\\.
    (?P<minor>0|[1-9]\\d*)\\.
    (?P<patch>0|[1-9]\\d*)
    (?:
        (?P<pre_l>[a-zA-Z-]+)         # pre-release label
        (?P<pre_n>0|[1-9]\\d*)        # pre-release version number
    )?                                # pre-release section is optional
"""
serialize = [
    "{major}.{minor}.{patch}{pre_l}{pre_n}",
    "{major}.{minor}.{patch}",
]

[tool.bumpversion.parts.pre_l]
values = ["b", "-rc"]
